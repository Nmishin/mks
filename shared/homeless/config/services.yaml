services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    app.base_entity.subscriber:
        class: App\EventSubscriber\BaseEntitySubscriber
        arguments:
            - '@security.token_storage'
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    app.contract.listener:
        class: App\EventListener\ContractListener
        tags:
            - { name: doctrine.event_listener, event: postPersist}

    app.shelter_history.listener:
        class: App\EventListener\ShelterRoomListener
        tags:
            - { name: doctrine.event_listener, event: postPersist }
    app.shelter_history_delete.listener:
        class: App\EventListener\ShelterRoomListener
        tags:
            - { name: doctrine.event_listener, event: postRemove }

    app.notice.listener:
        class: App\EventListener\NoticeListener
        arguments:
            - '@security.token_storage'
        tags:
            - { name: doctrine.event_listener, event: postLoad}

    app.certificate.listener:
        class: App\EventListener\CertificateListener
        tags:
            - { name: doctrine.event_listener, event: postPersist}

    app.client.admin:
        class: App\Admin\ClientAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Клиенты', model_class: 'App\Entity\Client', controller: 'App\Controller\ClientController' }
        calls:
            - [addChild, ['@app.note.admin', 'client']]
            - [addChild, ['@app.service.admin', 'client']]
            - [addChild, ['@app.document.admin', 'client']]
            - [addChild, ['@app.document_file.admin', 'client']]
            - [addChild, ['@app.contract.admin', 'client']]
            - [addChild, ['@app.shelter_history.admin', 'client']]
            - [addChild, ['@app.resident_questionnaire.admin', 'client']]
            - [addChild, ['@app.certificate.admin', 'client']]
            - [addChild, ['@app.contract.admin', 'client']]
            - [addChild, ['@app.generated_document.admin', 'client']]
            - [addChild, ['@app.notice.admin', 'client']]
            - [addChild, ['@app.history_download.admin', 'client']]
            - [addChild, ['@app.resident_form_response.admin', 'client']]
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]
            - [setTemplate, ['layout', 'admin/layout.html.twig']]
            - [setTemplate, ['edit', 'admin/client/edit.html.twig']]

    app.note.admin:
        class: App\Admin\NoteAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Примечания' }
        arguments: [null, App\Entity\Note, App:CRUD]
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.history_download.admin:
        class: App\Admin\HistoryDownloadAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'История скачиваний' }
        arguments: [~, App\Entity\HistoryDownload, App:CRUD]
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.service.admin:
        class: App\Admin\ServiceAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'services', model_class: 'App\Entity\Service', controller: 'App\Controller\CRUDController' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\User\UserAdmin:
        class: App\Admin\UserAdmin
        arguments: ['@sonata.user.manager.user']
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'services', model_class: 'App\Entity\User' }

    App\Admin\ClientFieldAdmin:
        class: App\Admin\ClientFieldAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Доп. поля клиентов', model_class: 'App\Entity\ClientField' }
        calls:
            - [addChild, ['@app.client_field_option.admin', 'field']]
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.client_field_option.admin:
        class: App\Admin\ClientFieldOptionAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Вариант выбора' }
        arguments: [null, App\Entity\ClientFieldOption, SonataAdminBundle:CRUD]
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\RegionAdmin:
        class: App\Admin\RegionAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Регионы', model_class: 'App\Entity\Region' }
        calls:
            - [addChild, ['@app.district.admin', 'region']]
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.district.admin:
        class: App\Admin\DistrictAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Районы' }
        arguments: [null, App\Entity\District, SonataAdminBundle:CRUD]
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.document.admin:
        class: App\Admin\DocumentAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Документы' }
        arguments: [null, App\Entity\Document, SonataAdminBundle:CRUD]
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.document_file.admin:
        class: App\Admin\DocumentFileAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Загруженные файлы', model_class: 'App\Entity\DocumentFile' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.contract.admin:
        class: App\Admin\ContractAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Сервисные планы', model_class: 'App\Entity\Contract', controller: 'App\Controller\CRUDController'}
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.resident_questionnaire.admin:
        class: App\Admin\ResidentQuestionnaireAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Анкета проживающего' }
        arguments: [null, App\Entity\ResidentQuestionnaire, App:CRUD]
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.contract_item.admin:
        class: App\Admin\ContractItemAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Пункты сервисного плана' }
        arguments: [null, App\Entity\ContractItem, SonataAdminBundle:CRUD]
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.shelter_history.admin:
        class: App\Admin\ShelterHistoryAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'shelter_history', model_class: 'App\Entity\ShelterHistory' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.certificate.admin:
        class: App\Admin\CertificateAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Справки' }
        arguments: [null, App\Entity\Certificate, App:CRUD]
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.generated_document.admin:
        class: App\Admin\GeneratedDocumentAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Построить документ' }
        arguments: [null, App\Entity\GeneratedDocument, App:CRUD]
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.notice.admin:
        class: App\Admin\NoticeAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Напоминания', model_class: 'App\Entity\Notice' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\ServiceTypeAdmin:
        class: App\Admin\ServiceTypeAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Типы услуг', model_class: 'App\Entity\ServiceType' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\ContractItemTypeAdmin:
        class: App\Admin\ContractItemTypeAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Типы пунктов договоров', model_class: 'App\Entity\ContractItemType' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\GeneratedDocumentTypeAdmin:
        class: App\Admin\GeneratedDocumentTypeAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Типы постр. док-тов', model_class: 'App\Entity\GeneratedDocumentType' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\GeneratedDocumentStartTextAdmin:
        class: App\Admin\GeneratedDocumentStartTextAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Преамбулы постр. док-тов', model_class: 'App\Entity\GeneratedDocumentStartText' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\GeneratedDocumentEndTextAdmin:
        class: App\Admin\GeneratedDocumentEndTextAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Заключения постр. док-тов', model_class: 'App\Entity\GeneratedDocumentEndText' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\CertificateTypeAdmin:
        class: App\Admin\CertificateTypeAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Типы справок', model_class: 'App\Entity\CertificateType' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\MenuItemAdmin:
        class: App\Admin\MenuItemAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Отображение разделов', model_class: 'App\Entity\MenuItem' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\PositionAdmin:
        class: App\Admin\PositionAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Должности', model_class: 'App\Entity\Position' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\ClientFormAdmin:
        class: App\Admin\ClientFormAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Редактирование форм', model_class: 'App\Entity\ClientForm' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]
            - [addChild, ['@app.client_form_field.admin', 'form']]

    App\Admin\ShelterRoomAdmin:
        class: App\Admin\ShelterRoomAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Приют', model_class: 'App\Entity\ShelterRoom', controller: 'App\Controller\ShelterRoomController'}

    app.client_form_field.admin:
        class: App\Admin\ClientFormFieldAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'ClientFormField' }
        arguments: [~, App\Entity\ClientFormField, SonataAdminBundle:CRUD]
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.resident_form_response.admin:
        class: App\Admin\ResidentFormResponseAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Анкета проживающего' }
        arguments: [~, App\Entity\ClientFormResponse, SonataAdminBundle:CRUD]
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.file_type:
        class: App\Form\Type\AppFileType
        tags:
            - { name: form.type, alias: 'app_file' }
        calls:
            - [setStorage, ['@vich_uploader.storage']]

    app.photo_type:
        class: App\Form\Type\AppPhotoType
        tags:
            - { name: form.type, alias: 'app_photo' }

    app.contract_duration_type:
        class: App\Form\Type\AppContractDurationType
        tags:
            - { name: form.type, alias: 'app_contract_duration' }

    app.render_service:
        class: App\Service\RenderService
        arguments: ['@templating', '@kernel', '@twig']

    app.certificate_recreator_service:
        class: App\Service\CertificateRecreator
        arguments: ['@doctrine.orm.default_entity_manager']
        autowire: true

    app.report_service:
        class: App\Service\ReportService
        arguments: ['@doctrine.orm.default_entity_manager']
        autowire: true

    app.additional_field_to_array.transformer:
        class: App\Form\DataTransformer\AdditionalFieldToArrayTransformer
        arguments: ['@app.client_field_option.repository']

    app.certificate_type_to_choice_field_mask_type.transformer:
        class: App\Form\DataTransformer\CertificateTypeToChoiceFieldMaskTypeTransformer
        arguments: ['@app.certificate_type.repository']

    app.position_to_choice_field_mask_type.transformer:
        class: App\Form\DataTransformer\PositionToChoiceFieldMaskTypeTransformer
        arguments: ['@app.position_option.repository']

    app.client_field_option.repository:
        class: App\Repository\ClientFieldOptionRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments: ['App\Entity\ClientFieldOption']

    app.certificate_type.repository:
        class: App\Repository\CertificateTypeRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments: ['App\Entity\CertificateType']

    App\Repository\ServiceTypeRepository:
        class: App\Repository\ServiceTypeRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments: ['App\Entity\ServiceType']

    App\Repository\NoticeRepository:
        class: App\Repository\NoticeRepository
        factory: [ '@doctrine.orm.default_entity_manager', getRepository ]
        arguments: [ 'App\Entity\Notice' ]

    App\Repository\MenuItemRepository:
        class: App\Repository\MenuItemRepository
        factory: [ '@doctrine.orm.default_entity_manager', getRepository ]
        arguments: [ 'App\Entity\MenuItem' ]

    App\Repository\ClientFieldRepository:
        class: App\Repository\ClientFieldRepository
        factory: [ '@doctrine.orm.default_entity_manager', getRepository ]
        arguments: [ 'App\Entity\ClientField' ]

    App\Repository\ClientFieldValueRepository:
        class: App\Repository\ClientFieldValueRepository
        factory: [ '@doctrine.orm.default_entity_manager', getRepository ]
        arguments: [ 'App\Entity\ClientFieldValue' ]

    app.client_form_response.repository:
        class: App\Repository\ClientFormResponseRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments: ['App\Entity\ClientFormResponse']

    app.client_form.repository:
        class: App\Repository\ClientFormRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments: ['App\Entity\ClientForm']

    app.resident_questionnaire_converter:
        class: App\Service\ResidentQuestionnaireConverter
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@app.client_form_response.repository'
            - '@app.client_form.repository'

    app.meta_service:
        class: App\Service\MetaService
        arguments: ['@doctrine.orm.entity_manager']
        public: true

    sonata.admin.request.fetcher:
        class: Sonata\AdminBundle\Request\AdminFetcher
        public: true
        arguments: ['@sonata.admin.pool']