services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Admin\ClientAdmin:
        class: App\Admin\ClientAdmin
        calls:
            - [setTemplate, ['layout', 'admin/layout.html.twig']]
            - [setTemplate, ['edit', 'admin/client/edit.html.twig']]

    app.generated_document.admin:
        class: App\Admin\GeneratedDocumentAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Построить документ' }
        arguments: [null, App\Entity\GeneratedDocument, App:CRUD]
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.notice.admin:
        class: App\Admin\NoticeAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Напоминания', model_class: 'App\Entity\Notice' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\ServiceTypeAdmin:
        class: App\Admin\ServiceTypeAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Типы услуг', model_class: 'App\Entity\ServiceType' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\ContractItemTypeAdmin:
        class: App\Admin\ContractItemTypeAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Типы пунктов договоров', model_class: 'App\Entity\ContractItemType' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\GeneratedDocumentTypeAdmin:
        class: App\Admin\GeneratedDocumentTypeAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Типы постр. док-тов', model_class: 'App\Entity\GeneratedDocumentType' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\GeneratedDocumentStartTextAdmin:
        class: App\Admin\GeneratedDocumentStartTextAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Преамбулы постр. док-тов', model_class: 'App\Entity\GeneratedDocumentStartText' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\GeneratedDocumentEndTextAdmin:
        class: App\Admin\GeneratedDocumentEndTextAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Заключения постр. док-тов', model_class: 'App\Entity\GeneratedDocumentEndText' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\CertificateTypeAdmin:
        class: App\Admin\CertificateTypeAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Типы справок', model_class: 'App\Entity\CertificateType' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\MenuItemAdmin:
        class: App\Admin\MenuItemAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Отображение разделов', model_class: 'App\Entity\MenuItem' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\PositionAdmin:
        class: App\Admin\PositionAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Должности', model_class: 'App\Entity\Position' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Admin\ClientFormAdmin:
        class: App\Admin\ClientFormAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Редактирование форм', model_class: 'App\Entity\ClientForm' }
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]
            - [addChild, ['@app.client_form_field.admin', 'form']]

    App\Admin\ShelterRoomAdmin:
        class: App\Admin\ShelterRoomAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Приют', model_class: 'App\Entity\ShelterRoom', controller: 'App\Controller\ShelterRoomController'}

    app.client_form_field.admin:
        class: App\Admin\ClientFormFieldAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'ClientFormField' }
        arguments: [~, App\Entity\ClientFormField, SonataAdminBundle:CRUD]
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    app.resident_form_response.admin:
        class: App\Admin\ResidentFormResponseAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Анкета проживающего' }
        arguments: [~, App\Entity\ClientFormResponse, SonataAdminBundle:CRUD]
        calls:
            - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

    App\Repository\ClientFieldOptionRepository:
        class: App\Repository\ClientFieldOptionRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments: ['App\Entity\ClientFieldOption']

    App\Repository\CertificateTypeRepository:
        class: App\Repository\CertificateTypeRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments: ['App\Entity\CertificateType']

    App\Repository\ServiceTypeRepository:
        class: App\Repository\ServiceTypeRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments: ['App\Entity\ServiceType']

    App\Repository\NoticeRepository:
        class: App\Repository\NoticeRepository
        factory: [ '@doctrine.orm.default_entity_manager', getRepository ]
        arguments: [ 'App\Entity\Notice' ]

    App\Repository\MenuItemRepository:
        class: App\Repository\MenuItemRepository
        factory: [ '@doctrine.orm.default_entity_manager', getRepository ]
        arguments: [ 'App\Entity\MenuItem' ]

    App\Repository\ClientFieldRepository:
        class: App\Repository\ClientFieldRepository
        factory: [ '@doctrine.orm.default_entity_manager', getRepository ]
        arguments: [ 'App\Entity\ClientField' ]

    App\Repository\ClientFieldValueRepository:
        class: App\Repository\ClientFieldValueRepository
        factory: [ '@doctrine.orm.default_entity_manager', getRepository ]
        arguments: [ 'App\Entity\ClientFieldValue' ]

    App\Repository\ClientFormResponseRepository:
        class: App\Repository\ClientFormResponseRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments: ['App\Entity\ClientFormResponse']

    App\Repository\ClientFormRepository:
        class: App\Repository\ClientFormRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments: ['App\Entity\ClientForm']